# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL Ultimate Security Scan"

on:
  workflow_call:

jobs:
  analyze:
    name: Security Analysis (${{ matrix.language }})
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: java-kotlin
            build-mode: manual

    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Ensures full history for accurate analysis

    - name: 🔍 Check for Java/Kotlin Source Files
      id: check_files
      run: |
        FILE_COUNT=$(find . -name "*.java" -o -name "*.kt" | wc -l)
        if [[ "$FILE_COUNT" -eq 0 ]]; then
          echo "⚠️ No Java/Kotlin files found. Skipping CodeQL analysis."
          echo "skip_codeql=true" >> $GITHUB_ENV
        else
          echo "✅ Found $FILE_COUNT Java/Kotlin files."
          echo "skip_codeql=false" >> $GITHUB_ENV
        fi

    - name: 🛡️ Initialize CodeQL
      if: env.skip_codeql == 'false'
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        queries: +security-extended,security-and-quality

    - name: 🔄 Set Up Java & Gradle
      if: env.skip_codeql == 'false'
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: 🛠️ Build Java/Kotlin Project
      if: env.skip_codeql == 'false'
      run: |
        set -e  # Stop execution if any command fails
        echo "🔍 Checking available build files..."
        ls -la
        if [ -f "gradlew" ]; then
          echo "✅ Found Gradle build system."
          chmod +x gradlew
          ./gradlew clean build --no-daemon --stacktrace --info
        elif [ -f "pom.xml" ]; then
          echo "✅ Found Maven build system."
          mvn clean compile
        else
          echo "❌ No recognized build system (Gradle/Maven). CodeQL might fail!"
          exit 1
        fi

    - name: 🔍 Perform CodeQL Analysis
      if: env.skip_codeql == 'false'
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
      continue-on-error: false

    - name: 🚨 Debug SARIF File
      if: always()
      run: |
        echo "🔍 Checking if SARIF file exists..."
        find . -name "*.sarif" || echo "⚠️ No SARIF files found!"

    - name: 📤 Upload CodeQL SARIF Results
      if: env.skip_codeql == 'false'
      run: |
        echo "🔍 Searching for SARIF file..."
        SARIF_PATH=$(find . -name "*.sarif" | head -n 1)

        if [[ -z "$SARIF_PATH" ]]; then
          echo "❌ SARIF file not found! CodeQL analysis may have failed."
          exit 1
        fi

        echo "✅ Found SARIF file at: $SARIF_PATH. Uploading to GitHub..."
        curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Content-Type: application/json" \
          --data-binary @"$SARIF_PATH" \
          "https://api.github.com/repos/${{ github.repository }}/code-scanning/sarifs"

    - name: 🚨 Block Merge if CodeQL Detects Issues
      if: failure()
      run: |
        echo "❌ CodeQL detected security issues. Merge is blocked!"
        exit 1
