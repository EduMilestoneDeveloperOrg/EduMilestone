# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL Ultimate Security Scan"

on:
  workflow_call:  # Only triggered by another workflow
  workflow_dispatch:  # üöÄ Enables manual trigger via API

jobs:
  analyze:
    name: Security Analysis (${{ matrix.language }})
    runs-on: ubuntu-latest
    permissions:
      security-events: write  # Required for SARIF upload
      packages: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: java-kotlin
            build-mode: manual

    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures full history for accurate analysis

      - name: üîç Check for Java/Kotlin Source Files
        id: check_files
        run: |
          FILE_COUNT=$(find . -name "*.java" -o -name "*.kt" | wc -l)
          if [[ "$FILE_COUNT" -eq 0 ]]; then
            echo "‚ö†Ô∏è No Java/Kotlin files found. Skipping CodeQL analysis."
            echo "skip_codeql=true" >> $GITHUB_ENV
          else
            echo "‚úÖ Found $FILE_COUNT Java/Kotlin files."
            echo "skip_codeql=false" >> $GITHUB_ENV
          fi

      - name: üõ°Ô∏è Initialize CodeQL
        if: env.skip_codeql == 'false'
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}
          queries: +security-extended,security-and-quality  # Advanced security & quality checks

      - name: üîÑ Set Up Java & Gradle
        if: env.skip_codeql == 'false'
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: üì¶ Setup Gradle Caching
        if: env.skip_codeql == 'false'
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: üõ†Ô∏è Ensure Gradle Wrapper is Executable
        if: env.skip_codeql == 'false'
        run: chmod +x ./gradlew

      - name: ‚è≥ Enforce Build Timeout
        if: env.skip_codeql == 'false'
        env:
          TIMEOUT_DURATION: 15m
        run: |
          echo "‚è≥ Running build with timeout of $TIMEOUT_DURATION..."
          timeout $TIMEOUT_DURATION ./gradlew clean build --no-daemon --stacktrace --info
          EXIT_CODE=$?

          if [[ $EXIT_CODE -eq 124 ]]; then
            echo "‚ùå ERROR: Build timed out after $TIMEOUT_DURATION."
            exit 1
          elif [[ $EXIT_CODE -ne 0 ]]; then
            echo "‚ùå ERROR: Build failed with exit code $EXIT_CODE."
            exit $EXIT_CODE
          fi

          echo "‚úÖ Build completed successfully."

      - name: üîç Perform CodeQL Analysis
        if: env.skip_codeql == 'false'
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"
        continue-on-error: false

      - name: üö® Debug SARIF File
        if: always()
        run: |
          echo "üîç Checking if SARIF file exists..."
          find . -name "*.sarif" || echo "‚ö†Ô∏è No SARIF files found!"

      - name: üì§ Upload CodeQL SARIF Results
        if: env.skip_codeql == 'false'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "**/*.sarif"

      - name: üì¶ Store Built APK
        if: env.skip_codeql == 'false'
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: ignore  # ‚úÖ Prevents workflow failure if APK isn't generated

      - name: üö® Block Merge if CodeQL Detects Issues
        if: failure()
        run: |
          echo "‚ùå CodeQL detected security issues. Merge is blocked!"
          exit 1
