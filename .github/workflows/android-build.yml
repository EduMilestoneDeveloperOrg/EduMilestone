name: Android CI/CD Pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened, edited, ready_for_review]
    branches:
      - master
  push:
    branches:
      - master

permissions:
  pull-requests: write
  contents: write
  security-events: write
  actions: write
  statuses: write
  id-token: write

jobs:
  mega-linter:
    runs-on: ubuntu-latest
    steps:
      # ‚úÖ Step 1: Clear Mega-Linter Cache
      - name: Clear Mega-Linter Cache
        run: |
          npx mega-linter --clear-cache || true

      # ‚úÖ Step 2: Checkout PR branch
      - name: Checkout PR branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      # ‚úÖ Step 3: Fetch Commit Author's Email
      - name: Fetch Commit Author's Email
        id: fetch_email
        run: |
          EMAIL="$(git log -1 --pretty=format:'%ae')"
          echo "Commit Author Email: $EMAIL"
          if [[ -z "$EMAIL" || "$EMAIL" == "null" ]]; then
            EMAIL="default-notification@example.com"
          fi
          echo "Final Email to Use: $EMAIL"
          echo "EMAIL=$EMAIL" >> $GITHUB_ENV

      # ‚úÖ Step 4: Run MegaLinter with Correct Configurations
      - name: MegaLinter
        uses: oxsecurity/megalinter@v8.4.2
        env:
          # ‚úÖ GitHub Token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          # ‚úÖ Essential MegaLinter Configuration (Using config/ folder)
          GITHUB_WORKSPACE: "/github/workspace"
          MEGA_LINTER_CONFIG: "/github/workspace/config/.mega-linter.yml"
          MEGA_LINTER_IGNORE_FILE: "/github/workspace/config/.mega-linter-ignore"
          SPELL_CSPELL_CONFIG_FILE: "/github/workspace/config/.cspell.json"
          MEGA_LINTER_REPORT_DIR: "/github/workspace/reports/megalinter-reports"

          # ‚úÖ Custom Linter Configurations
          JSCPD_CONFIG_FILE: "/github/workspace/config/.jscpd.json"
          KOTLIN_DETEKT_CONFIG_FILE: "/github/workspace/config/.detekt.yml"

          # ‚úÖ Explicitly Disable Linters
          DISABLE_LINTERS: "ACTION,BASH,SHELL"

          # ‚úÖ Logging & Filtering
          LOG_LEVEL: "INFO"
          PRINT_LINTERS_TABLE: "false"
          PRINT_ALL_FILES: "false"
          PRINT_SUMMARY: "true"
          FILTER_REGEX_EXCLUDE: ".*(test|androidTest).*"

          # ‚úÖ Error Handling & Auto-Fixing
          DISABLE_ERRORS: "false"
          FAIL_IF_ERROR: "true"
          VALIDATE_ALL_CODEBASE: "true"
          APPLY_FIXES: "all"

          # ‚úÖ Email Reporting Configuration
          EMAIL_REPORTER_EMAIL: ${{ env.EMAIL }}
          EMAIL_REPORTER_SMTP_SERVER: "smtp.office365.com"
          EMAIL_REPORTER_SMTP_PORT: "587"
          EMAIL_REPORTER_SMTP_USERNAME: ${{ secrets.OUTLOOK_USER }}
          EMAIL_REPORTER_SMTP_PASSWORD: ${{ secrets.OUTLOOK_APP_PASSWORD }}

      # ‚úÖ Step 5: Verify MegaLinter Reports in reports/ folder
      - name: Check MegaLinter Reports
        run: |
          REPORT_PATH="${{ github.workspace }}/reports/megalinter-reports"
          if [ -d "$REPORT_PATH" ]; then
            echo "‚úÖ MegaLinter reports found, proceeding with upload."
          else
            echo "‚ö†Ô∏è No reports found! Skipping upload."
            exit 1
          fi

      # ‚úÖ Step 6: Upload MegaLinter Report Artifact
      - name: Upload MegaLinter report artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: megalinter-report
          path: ${{ github.workspace }}/reports/megalinter-reports

      # ‚úÖ Step 7: Comment on PR with MegaLinter Results
      - name: Comment on PR with MegaLinter results
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### üîç MegaLinter Results
            üöÄ **Linter results for the pull request:**
            - üìå **PR Link**: [${{ github.event.pull_request.html_url }}](${{ github.event.pull_request.html_url }})
            - üìÑ **MegaLinter Report**: [Linting Report Artifact](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

      # ‚úÖ Step 8: Approve PR if No Errors
      - name: Approve PR if No Errors
        if: success()
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### ‚úÖ MegaLinter Results
            **The PR is ready for approval. All linting issues have been fixed.**
            PR Approved üéâ
