name: Android CI/CD Pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened, edited, ready_for_review]
    branches:
      - master
    paths:
      - '**'
  push:
    branches:
      - master

permissions:
  pull-requests: write
  contents: write
  security-events: write
  actions: write
  statuses: write
  id-token: write

jobs:
  mega-linter:
    runs-on: ubuntu-latest
    steps:
      # ✅ Step 1: Clear Cache to Ensure Latest Config
      - name: Clear GitHub Actions Cache
        uses: actions/cache@v3
        with:
          path: ~/.cache
          key: ${{ runner.os }}-mega-linter-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-mega-linter

      # ✅ Step 2: Checkout PR branch
      - name: Checkout PR branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      # ✅ Step 3: Debug - List all files in the workspace
      - name: Debug - List All Files in Workspace
        run: |
          echo "🔍 Listing all files in the workspace..."
          ls -al ${{ github.workspace }}
          echo "🔍 Checking inside .github folder..."
          ls -al ${{ github.workspace }}/.github || echo "⚠️ .github folder missing!"
          echo "🔍 Checking inside root directory..."
          ls -al $GITHUB_WORKSPACE

      # ✅ Step 4: Run MegaLinter with Detailed Logging
      - name: Run MegaLinter on PR changes
        id: mega_linter
        run: |
          echo "🚀 Pulling MegaLinter (latest version)..."
          docker pull megalinter/megalinter:latest
          echo "🔍 Running MegaLinter with detailed logging..."
          docker run --rm \
            -v "${{ github.workspace }}:/mnt/mega-linter" \
            -e GITHUB_WORKSPACE="/mnt/mega-linter" \
            -e MEGA_LINTER_CONFIG="/mnt/mega-linter/.mega-linter.yml" \
            -e MEGA_LINTER_IGNORE_FILE="/mnt/mega-linter/.mega-linter-ignore" \
            -e SPELL_CSPELL_CONFIG_FILE="/mnt/mega-linter/.cspell.json" \
            -e MEGA_LINTER_REPORT_DIR="/mnt/mega-linter/megalinter-reports" \
            -e LOG_LEVEL="DEBUG" \
            -e PRINT_LINTERS_TABLE="true" \
            -e PRINT_ALL_FILES="true" \
            -e PRINT_SUMMARY="true" \
            -e DISABLE_ERRORS="true" \
            megalinter/megalinter:latest --run --ci --log-level DEBUG || true
        continue-on-error: false

      # ✅ Step 5: Verify MegaLinter Reports Before Uploading
      - name: Check MegaLinter Reports
        run: |
          REPORT_PATH="${{ github.workspace }}/megalinter-reports"
          if [ -d "$REPORT_PATH" ]; then
            echo "✅ MegaLinter reports found, proceeding with upload."
          else
            echo "⚠️ No reports found! Skipping upload."
            exit 1
          fi

      # ✅ Step 6: Upload MegaLinter Report Artifact
      - name: Upload MegaLinter report artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: megalinter-report
          path: ${{ github.workspace }}/megalinter-reports

      # ✅ Step 7: Comment on PR with MegaLinter Results
      - name: Comment on PR with MegaLinter results
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### 🔍 MegaLinter Results
            🚀 **Linter results for the pull request:**
            - 📌 **PR Link**: [${{ github.event.pull_request.html_url }}](${{ github.event.pull_request.html_url }})
            - 📄 **MegaLinter Report**: [Linting Report Artifact](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

      # ✅ Step 8: Approve PR if No Errors
      - name: Approve PR if No Errors
        if: success()
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### ✅ MegaLinter Results
            **The PR is ready for approval. All linting issues have been fixed.**
            PR Approved 🎉
